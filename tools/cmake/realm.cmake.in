if(REALM_ENABLE_ENCRYPTION AND NOT APPLE)
    if(ANDROID)
        string(TOLOWER "${CMAKE_BUILD_TYPE}" BUILD_TYPE)
        set(OPENSSL_FILENAME "openssl-${BUILD_TYPE}-@ANDROID_SYSROOT@-Android-${ANDROID_ABI}")
        set(OPENSSL_URL  "http://static.realm.io/downloads/openssl/@ANDROID_SYSROOT@/Android/${ANDROID_ABI}/${OPENSSL_FILENAME}.tar.gz")

        message(STATUS "Downloading OpenSSL...")
        file(DOWNLOAD "${OPENSSL_URL}" "${CMAKE_BINARY_DIR}/${OPENSSL_FILENAME}.tar.gz")

        message(STATUS "Uncompressing OpenSSL...")
        execute_process(COMMAND ${CMAKE_COMMAND} -E tar xfz "${OPENSSL_FILENAME}.tar.gz")

        message(STATUS "Importing OpenSSL...")
        include(${CMAKE_BINARY_DIR}/${OPENSSL_FILENAME}/openssl.cmake)
    else()
        include(FindOpenSSL)
        target_link_libraries(realm ${OPENSSL_LIBRARIES})
    endif()
endif()

set(CURRENT_DIR "${CMAKE_CURRENT_LIST_DIR}")

add_library(realm STATIC IMPORTED)
set_target_properties(realm PROPERTIES
                      IMPORTED_LOCATION "${CURRENT_DIR}/lib/librealm.a"
                      INTERFACE_INCLUDE_DIRECTORIES "${CURRENT_DIR}/include")

if(ANDROID AND REALM_ENABLE_ENCRYPTION)
    set_target_properties(realm PROPERTIES INTERFACE_LINK_LIBRARIES crypto)
endif()

if(APPLE)
    find_library(Foundation Foundation)
    target_link_libraries(realm ${Foundation})
endif(APPLE)
